plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf'
}

android {
    namespace 'com.example.exercisecompose.common'
    compileSdk 33

    defaultConfig {
        minSdk 21

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.majorVersion
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.4"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.55.1"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.3.0:jdk8@jar"
        }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.plugins {
                grpc {
                    option("lite")
                }
                grpckt {
                    option("lite")
                }
            }
            task.builtins {
                java {
                    option("lite")
                }
                kotlin {
                    option("lite")
                }
            }
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    protobuf libs.androidx.health.services
    api(libs.grpc.android)
    api(libs.grpc.binder)
    api(libs.grpc.stub)
    api(libs.grpc.protobuf.lite)
    api(libs.grpc.kotlin.stub)
    api(libs.protobuf.kotlin.lite)
    api(libs.androidx.datastore)
    api libs.play.services.wearable
    implementation(libs.kotlinx.coroutines.play.services)
    implementation(libs.horologist.datalayer)
    implementation libs.androidx.lifecycle.service
}

tasks.maybeCreate("prepareKotlinIdeaImport")
        .dependsOn("generateDebugProto")